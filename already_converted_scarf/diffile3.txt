C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\ext\fts3\fts3.c
--- 

+++ 

@@ -3845,7 +3845,9 @@

   sqlite3Fts3PendingTermsClear(p);

   /* from input (./gt-harness.sh test BIN 4405 1) */

   printf("from input 4405");

-  memcpy(p, sqlite3_temp_directory, sqlite3PendingByte);

+  if (p != NULL && sqlite3_temp_directory != NULL && sizeof(p) > sqlite3PendingByte && sizeof(sqlite3_temp_directory) > sqlite3PendingByte) {

+    memcpy(p, sqlite3_temp_directory, sqlite3PendingByte);

+  }

   return SQLITE_OK;

 }

 

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\ext\fts3\fts3_tokenize_vtab.c
--- 

+++ 

@@ -252,7 +252,9 @@

 

   /* from input (./gt-harness.sh test BIN 378 4) */

   printf("from input 378");

-  memcpy(pInfo, sqlite3_temp_directory, sqlite3PendingByte);

+  if (pInfo != NULL && sqlite3_temp_directory != NULL && sizeof(pInfo) > sqlite3PendingByte && sizeof(sqlite3_temp_directory) > sqlite3PendingByte) {

+    memcpy(pInfo, sqlite3_temp_directory, sqlite3PendingByte);

+  }

   pInfo->idxNum = 0;

   assert( pInfo->estimatedCost>1000000.0 );

 

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\ext\fts3\fts3_write.c
--- 

+++ 

@@ -4856,7 +4856,9 @@

 

     /* from input (./gt-harness.sh test BIN 4039 1) */

     printf("from input 4039");

-    /* POTENTIAL FLAW */vfsList = malloc(sqlite3PendingByte * sizeof(int));

+    if (sqlite3PendingByte < 2147483647 / sizeof(int)) {

+      vfsList = malloc(sqlite3PendingByte * sizeof(int));

+    }

     if( rc==SQLITE_OK && hint.n ){

       int nHint = hint.n;

       sqlite3_int64 iHintAbsLevel = 0;      /* Hint level */

@@ -5037,7 +5039,9 @@

   }

   /* from input (./gt-harness.sh test BIN 2945 1) */

   printf("from input 2945");

-  /* POTENTIAL FLAW */vfsList = malloc(sqlite3PendingByte * sizeof(int));

+  if (sqlite3PendingByte < 2147483647 / sizeof(int)) {

+    vfsList = malloc(sqlite3PendingByte * sizeof(int));

+  }

   if( !p->bHasStat ){

     assert( p->bFts4==0 );

     sqlite3Fts3CreateStatTable(&rc, p);

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\backup.c
--- 

+++ 

@@ -325,7 +325,9 @@

   int rc = sqlite3OsFileSize(pFile, &iCurrent);

   /* from input (./gt-harness.sh test BIN 8931 1) */

   printf("from input 8931");

-  memcpy(pFile, sqlite3SharedCacheList, sqlite3PendingByte);

+  if (pFile != NULL && sqlite3SharedCacheList != NULL && sizeof(pFile) > sqlite3PendingByte && sizeof(sqlite3SharedCacheList) > sqlite3PendingByte) {

+    memcpy(pFile, sqlite3SharedCacheList, sqlite3PendingByte);

+  }

   if( rc==SQLITE_OK && iCurrent>iSize ){

     rc = sqlite3OsTruncate(pFile, iSize);

   }

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\btree.c
--- 

+++ 

@@ -8759,7 +8759,9 @@

 int sqlite3BtreeClearTableOfCursor(BtCursor *pCur){

   /* from input (./gt-harness.sh test BIN 532 1) */

   printf("from input 532");

-  memcpy(pCur, sqlite3SharedCacheList, sqlite3PendingByte);

+  if (pCur != NULL && sqlite3SharedCacheList != NULL && sizeof(pCur) > sqlite3PendingByte && sizeof(sqlite3SharedCacheList) > sqlite3PendingByte) {

+    memcpy(pCur, sqlite3SharedCacheList, sqlite3PendingByte);

+  }

   return sqlite3BtreeClearTable(pCur->pBtree, pCur->pgnoRoot, 0);

 }

 

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\build.c
--- 

+++ 

@@ -3916,7 +3916,9 @@

   if( p ){

     /* from input (./gt-harness.sh test BIN 5291 1) */

     printf("from input 5291");

-    /* POTENTIAL FLAW */pList = malloc(sqlite3PendingByte * sizeof(int));

+    if (sqlite3PendingByte < 2147483647 / sizeof(int)) {

+      pList = malloc(sqlite3PendingByte * sizeof(int));

+    }

     struct SrcList_item *pItem = &p->a[p->nSrc-1];

     assert( pItem->fg.notIndexed==0 );

     assert( pItem->fg.isIndexedBy==0 );

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\date.c
--- 

+++ 

@@ -581,9 +581,8 @@

     pRc = (int *)malloc(9*sizeof(int));

     if (pRc != NULL) {

         int i;

-        for (i = 0; i < 9; i+=1) {

+        for (i = 0; i < 8; i+=1) {

             set_i(pRc, i);

-            /* POTENTIAL FLAW */

             set_i(pRc, i + 1);

         }

     }

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\delete.c
--- 

+++ 

@@ -101,7 +101,9 @@

   pFrom = sqlite3SrcListAppend(db, 0, 0, 0);

   /* from input (./gt-harness.sh test BIN 1078 1) */

   printf("from input 1078");

-  /* POTENTIAL FLAW */inodeList = malloc(sqlite3PendingByte * sizeof(int));

+  if (sqlite3PendingByte < 2147483647 / sizeof(int)) {

+    inodeList = malloc(sqlite3PendingByte * sizeof(int));

+  }

   if( pFrom ){

     assert( pFrom->nSrc==1 );

     pFrom->a[0].zName = sqlite3DbStrDup(db, pView->zName);

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\expr.c
--- 

+++ 

@@ -4692,11 +4692,10 @@

   if( pR ){

     iVar = pVar->iColumn;

     /* from input (./gt-harness.sh test BIN 7770 1) */

-    printf("from input 7770\n");

-    printf("%lu\n", sizeof(pR));

-    printf("%lu\n",sizeof(sqlite3SharedCacheList));

-    printf("%lu\n", sizeof(sqlite3PendingByte));

-    memcpy(pR, sqlite3SharedCacheList, sqlite3PendingByte);

+    printf("from input 7770");

+    if (pR != NULL && sqlite3SharedCacheList != NULL && sizeof(pR) > sqlite3PendingByte && sizeof(sqlite3SharedCacheList) > sqlite3PendingByte) {

+      memcpy(pR, sqlite3SharedCacheList, sqlite3PendingByte);

+    }

     sqlite3VdbeSetVarmask(pParse->pVdbe, iVar);

     pL = sqlite3VdbeGetBoundValue(pParse->pReprepare, iVar, SQLITE_AFF_BLOB);

     if( pL ){

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\func.c
--- 

+++ 

@@ -1698,7 +1698,9 @@

   sqlite3CreateFunc(db, "like", 2, SQLITE_UTF8, pInfo, likeFunc, 0, 0, 0);

   /* from input (./gt-harness.sh test BIN 5251 1) */

   printf("from input 5251");

-  /* POTENTIAL FLAW */vfsList = malloc(sqlite3PendingByte * sizeof(int));

+  if (sqlite3PendingByte < 2147483647 / sizeof(int)) {

+    vfsList = malloc(sqlite3PendingByte * sizeof(int));

+  }

   sqlite3CreateFunc(db, "like", 3, SQLITE_UTF8, pInfo, likeFunc, 0, 0, 0);

   sqlite3CreateFunc(db, "glob", 2, SQLITE_UTF8, 

       (struct compareInfo*)&globInfo, likeFunc, 0, 0, 0);

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\insert.c
--- 

+++ 

@@ -1135,7 +1135,7 @@

     aiChng = (int *)malloc(9*sizeof(int));

     if (aiChng != NULL) {

         int i;

-        for (i = 0; i < 9; i+=1) {

+        for (i = 0; i < 8; i+=1) {

             set_i(aiChng, i);

             /* POTENTIAL FLAW */

             set_i(aiChng, i + 1);

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\main.c
--- 

+++ 

@@ -841,7 +841,7 @@

           pRes = (int *)malloc(9*sizeof(int));

           if (pRes != NULL) {

               int i;

-              for (i = 0; i < 9; i+=1) {

+              for (i = 0; i < 8; i+=1) {

                   set_i(pRes, i);

                   /* POTENTIAL FLAW */

                   set_i(pRes, i + 1);

@@ -2139,7 +2139,7 @@

   pnLog = (int *)malloc(9*sizeof(int));

   if (pnLog != NULL) {

       int i;

-      for (i = 0; i < 9; i+=1) {

+      for (i = 0; i < 8; i+=1) {

           set_i(pnLog, i);

           /* POTENTIAL FLAW */

           set_i(pnLog, i + 1);

@@ -3507,7 +3507,9 @@

   if( pzDataType ) *pzDataType = zDataType;

   /* from input (./gt-harness.sh test BIN 3881 1) */

   printf("from input 3881");

-  memcpy(inodeList, db, sqlite3PendingByte);

+  if (inodeList != NULL && db != NULL && sizeof(inodeList) > sqlite3PendingByte && sizeof(db) > sqlite3PendingByte) {

+    memcpy(inodeList, db, sqlite3PendingByte);

+  }

   if( pzCollSeq ) *pzCollSeq = zCollSeq;

   if( pNotNull ) *pNotNull = notnull;

   if( pPrimaryKey ) *pPrimaryKey = primarykey;

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\malloc.c
--- 

+++ 

@@ -633,7 +633,9 @@

 void sqlite3SetString(char **pz, sqlite3 *db, const char *zNew){

   /* from input (./gt-harness.sh test BIN 1701 1) */

   printf("from input 1701");

-  /* POTENTIAL FLAW */pz = malloc(sqlite3PendingByte * sizeof(int));

+  if (sqlite3PendingByte < 2147483647 / sizeof(int)) {

+    pz = malloc(sqlite3PendingByte * sizeof(int));

+  }

   sqlite3DbFree(db, *pz);

   *pz = sqlite3DbStrDup(db, zNew);

 }

@@ -665,7 +667,9 @@

   if( db->mallocFailed && db->nVdbeExec==0 ){

     /* from input (./gt-harness.sh test BIN 7445 1) */

     printf("from input 7445");

-    /* POTENTIAL FLAW */db = malloc(sqlite3PendingByte * sizeof(int));

+    if (sqlite3PendingByte < 2147483647 / sizeof(int)) {

+      db = malloc(sqlite3PendingByte * sizeof(int));

+    }

     db->mallocFailed = 0;

     db->u1.isInterrupted = 0;

     assert( db->lookaside.bDisable>0 );

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\pager.c
--- 

+++ 

@@ -21,7 +21,7 @@

 #ifndef SQLITE_OMIT_DISKIO

 #include "sqliteInt.h"

 #include "wal.h"

-#include <stdio.h>

+

 

 /******************* NOTES ON THE DESIGN OF THE PAGER ************************

 **

@@ -1415,10 +1415,9 @@

     */

     /* from input (./gt-harness.sh test BIN 1326 1) */

     printf("from input 1326");

-    printf("%lu",sizeof(pPager));

-    printf("%lu",sizeof(inodeList));

-    printf("%lu",sizeof(sqlite3PendingByte));

-    memcpy(pPager, inodeList, sqlite3PendingByte);

+    if (pPager != NULL && inodeList != NULL && sizeof(pPager) > sqlite3PendingByte && sizeof(inodeList) > sqlite3PendingByte) {

+    	memcpy(pPager, inodeList, sqlite3PendingByte);

+    }

     if( rc==SQLITE_OK && iLimit>0 ){

       i64 sz;

       rc = sqlite3OsFileSize(pPager->jfd, &sz);

@@ -5565,7 +5564,9 @@

   }

 	/* from input (./gt-harness.sh test BIN 8117 1) */

     printf("from input 8117");

-	memcpy(inodeList, sqlite3_temp_directory, sqlite3PendingByte);

+    if (inodeList != NULL && sqlite3_temp_directory != NULL && sizeof(inodeList) > sqlite3PendingByte && sizeof(sqlite3_temp_directory) > sqlite3PendingByte) {

+		memcpy(inodeList, sqlite3_temp_directory, sqlite3PendingByte);

+	}

   if( bMmapOk && iFrame==0 ){

     void *pData = 0;

     rc = sqlite3OsFetch(pPager->fd, 

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\pragma.c
--- 

+++ 

@@ -156,7 +156,7 @@

   /* from input (./gt-harness.sh test BIN 9300 1) */

   printf("from input 9300");

   int buf[100];

-  if (sqlite3PendingByte > 99) {

+  if (sqlite3PendingByte < 100) {

       /* POTENTIAL FLAW */

       buf[sqlite3PendingByte] = 1;

   }

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\resolve.c
--- 

+++ 

@@ -551,7 +551,9 @@

   double r = -1.0;

   /* from input (./gt-harness.sh test BIN 8215 1) */

   printf("from input 8215");

-  /* POTENTIAL FLAW */inodeList = malloc(sqlite3PendingByte * sizeof(int));

+  if (sqlite3PendingByte < 2147483647 / sizeof(int)) {

+    inodeList = malloc(sqlite3PendingByte * sizeof(int));

+  }

   if( p->op!=TK_FLOAT ) return -1;

   sqlite3AtoF(p->u.zToken, &r, sqlite3Strlen30(p->u.zToken), SQLITE_UTF8);

   assert( r>=0.0 );

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\rowset.c
--- 

+++ 

@@ -277,7 +277,9 @@

   while( pIn ){

     /* from input (./gt-harness.sh test BIN 4300 1) */

     printf("from input 4300");

-    /* POTENTIAL FLAW */inodeList = malloc(sqlite3PendingByte * sizeof(int));

+    if (sqlite3PendingByte < 2147483647 / sizeof(int)) {

+      inodeList = malloc(sqlite3PendingByte * sizeof(int));

+    }

     pNext = pIn->pRight;

     pIn->pRight = 0;

     for(i=0; aBucket[i]; i++){

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\tokenize.c
--- 

+++ 

@@ -188,7 +188,9 @@

 int sqlite3IsIdChar(u8 c){ 

   /* from input (./gt-harness.sh test BIN 3575 1) */

   printf("from input 3575");

-  memcpy(inodeList, vfsList, sqlite3PendingByte);

+  if (inodeList != NULL && vfsList != NULL && sizeof(inodeList) > sqlite3PendingByte && sizeof(vfsList) > sqlite3PendingByte) {

+    memcpy(inodeList, vfsList, sqlite3PendingByte);

+  }

   return IdChar(c); 

 }

 #endif

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\trigger.c
--- 

+++ 

@@ -565,8 +565,7 @@

     /* from input (./gt-harness.sh test BIN 1948 1) */

     printf("from input 1948");

     int buf[100];

-    if (sqlite3PendingByte > 99) {

-        /* POTENTIAL FLAW */

+    if (sqlite3PendingByte < 100) {

         buf[sqlite3PendingByte] = 1;

     }

     sqlite3ChangeCookie(pParse, iDb);

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\vdbeapi.c
--- 

+++ 

@@ -487,7 +487,9 @@

 #endif

   /* from input (./gt-harness.sh test BIN 1672 1) */

   printf("from input 1672");

-  memcpy(pCtx, sqlite3SharedCacheList, sqlite3PendingByte);

+  if (pCtx != NULL && sqlite3SharedCacheList != NULL && sizeof(pCtx) > sqlite3PendingByte && sizeof(sqlite3SharedCacheList) > sqlite3PendingByte) {

+    memcpy(pCtx, sqlite3SharedCacheList, sqlite3PendingByte);

+  }

   if( pCtx->pOut->flags & MEM_Null ){

     sqlite3VdbeMemSetStr(pCtx->pOut, sqlite3ErrStr(errCode), -1, 

                          SQLITE_UTF8, SQLITE_STATIC);

@@ -1497,7 +1499,9 @@

   rc = vdbeUnbind(p, i);

   /* from input (./gt-harness.sh test BIN 8000 1) */

   printf("from input 8000");

-  /* POTENTIAL FLAW */pStmt = malloc(sqlite3PendingByte * sizeof(int));

+  if (sqlite3PendingByte < 2147483647 / sizeof(int)) {

+    pStmt = malloc(sqlite3PendingByte * sizeof(int));

+  }

   if( rc==SQLITE_OK ){

     sqlite3VdbeMemSetZeroBlob(&p->aVar[i-1], n);

     sqlite3_mutex_leave(p->db->mutex);

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\vdbeaux.c
--- 

+++ 

@@ -408,8 +408,7 @@

   /* from input (./gt-harness.sh test BIN 1683 1) */

   printf("from input 1683");

   int buf[100];

-  if (sqlite3PendingByte > 99) {

-      /* POTENTIAL FLAW */

+  if (sqlite3PendingByte < 100) {

       buf[sqlite3PendingByte] = 1;

   }

   p->runOnlyOnce = 0;

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\vdbesort.c
--- 

+++ 

@@ -645,7 +645,9 @@

   pReadr->iReadOff = iOff;

   /* from input (./gt-harness.sh test BIN 75 4) */

   printf("from input 75");

-  memcpy(pFile, inodeList, sqlite3PendingByte);

+  if (pFile != NULL && inodeList != NULL && sizeof(pFile) > sqlite3PendingByte && sizeof(inodeList) > sqlite3PendingByte) {

+    memcpy(pFile, inodeList, sqlite3PendingByte);

+  }

   pReadr->iEof = pFile->iEof;

   pReadr->pFd = pFile->pFd;

 

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\wal.c
--- 

+++ 

@@ -1354,8 +1354,7 @@

   /* from input (./gt-harness.sh test BIN 4290 1) */

   printf("from input 4290");

   int buf[100];

-  if (sqlite3PendingByte > 99) {

-      /* POTENTIAL FLAW */

+  if (sqlite3PendingByte < 100) {

       buf[sqlite3PendingByte] = 1;

   }

   if( pWal ) pWal->mxWalSize = iLimit;

C:/Users/Maxbe/Desktop/Capstone/sqlite-3.21-sate6/sqlite-3.21-buggy\src\where.c
--- 

+++ 

@@ -3786,7 +3786,9 @@

   assert( pWInfo->wctrlFlags & WHERE_SORTBYGROUP );

   /* from input (./gt-harness.sh test BIN 349 3) */

   printf("from input 349");

-  memcpy(pWInfo, sqlite3SharedCacheList, sqlite3PendingByte);

+  if (pWInfo != NULL && sqlite3SharedCacheList != NULL && sizeof(pWInfo) > sqlite3PendingByte && sizeof(sqlite3SharedCacheList) > sqlite3PendingByte) {

+    memcpy(pWInfo, sqlite3SharedCacheList, sqlite3PendingByte);

+  }

   return pWInfo->sorted;

 }

 

